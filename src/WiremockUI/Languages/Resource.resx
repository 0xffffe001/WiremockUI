<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="addServerDuplicateNameMessage" xml:space="preserve">
    <value>Esse "Nome"já está em uso</value>
  </data>
  <data name="addServerDuplicatePortMessage" xml:space="preserve">
    <value>Essa "Porta" já está em uso</value>
  </data>
  <data name="addServerInvalidPortMessage" xml:space="preserve">
    <value>O campo "Porta" está inválido.</value>
  </data>
  <data name="addServerRequiredNameMessage" xml:space="preserve">
    <value>O campo "Nome" é obrigatório.</value>
  </data>
  <data name="addServerRequiredPortMessage" xml:space="preserve">
    <value>O campo "Porta" é obrigatório.</value>
  </data>
  <data name="addServerRequiredUrlTargetMessage" xml:space="preserve">
    <value>O campo "Url destino" é obrigatório.</value>
  </data>
  <data name="addServerScenario" xml:space="preserve">
    <value>Adicionar cenário</value>
  </data>
  <data name="addScenarioDuplicateNameMessage" xml:space="preserve">
    <value>Esse "Nome" já está em uso</value>
  </data>
  <data name="addScenarioMenu" xml:space="preserve">
    <value>Adicionar mapa</value>
  </data>
  <data name="addScenarioRequiredNameMessage" xml:space="preserve">
    <value>O campo "Nome" é obrigatório.</value>
  </data>
  <data name="btnAdd" xml:space="preserve">
    <value>Adicionar</value>
  </data>
  <data name="btnCancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="btnCancelFileSelectiong" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="btnClean" xml:space="preserve">
    <value>Limpar</value>
  </data>
  <data name="btnClose" xml:space="preserve">
    <value>Fechar</value>
  </data>
  <data name="btnCloseTab" xml:space="preserve">
    <value>Fechar</value>
  </data>
  <data name="btnCompare" xml:space="preserve">
    <value>Comparar</value>
  </data>
  <data name="btnEdit" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="btnExecute" xml:space="preserve">
    <value>Executar</value>
  </data>
  <data name="btnFormat" xml:space="preserve">
    <value>Formatar JSON</value>
  </data>
  <data name="btnOpenExplorer" xml:space="preserve">
    <value>Abrir em um visualizador externo</value>
  </data>
  <data name="btnSaveFile" xml:space="preserve">
    <value>Salvar</value>
  </data>
  <data name="btnSearch" xml:space="preserve">
    <value>Buscar</value>
  </data>
  <data name="btnXmlFormat" xml:space="preserve">
    <value>Formatar XML</value>
  </data>
  <data name="chk100Expect" xml:space="preserve">
    <value>100-expect</value>
  </data>
  <data name="chkAutoContentLength" xml:space="preserve">
    <value>Calcular o "Content-Length" automáticamente</value>
  </data>
  <data name="chkAutoScroll" xml:space="preserve">
    <value>Rolar automáticamente</value>
  </data>
  <data name="chkDisableLogText" xml:space="preserve">
    <value>Desativar log de texto</value>
  </data>
  <data name="collapseAllMenu" xml:space="preserve">
    <value>Fechar todos</value>
  </data>
  <data name="compareMenu" xml:space="preserve">
    <value>Comparar...</value>
  </data>
  <data name="compareResultTitle" xml:space="preserve">
    <value>Resultado: {0} segundos</value>
  </data>
  <data name="deleteMappingMenu" xml:space="preserve">
    <value>Remover</value>
  </data>
  <data name="duplicateMappingMenu" xml:space="preserve">
    <value>Duplicar</value>
  </data>
  <data name="editServerMenu" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="editScenarioMenu" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="email" xml:space="preserve">
    <value>glaubergasparottojr@hotmail.com</value>
  </data>
  <data name="expandAllMenu" xml:space="preserve">
    <value>Expandir todos</value>
  </data>
  <data name="fileNotExistsMessage" xml:space="preserve">
    <value>Arquivo inexistente</value>
  </data>
  <data name="formServerInEditModeTitle" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="formServerTitle" xml:space="preserve">
    <value>Novo servidor</value>
  </data>
  <data name="formAddScenarioInEditModeTitle" xml:space="preserve">
    <value>Editar cenário</value>
  </data>
  <data name="formAddScenarioTitle" xml:space="preserve">
    <value>Novo cenário</value>
  </data>
  <data name="formatJsonErrorMessage" xml:space="preserve">
    <value>Esse JSON não é válido: {0}</value>
  </data>
  <data name="formatXmlErrorMessage" xml:space="preserve">
    <value>Esse XML não é válido: {0}</value>
  </data>
  <data name="formCompareTitle" xml:space="preserve">
    <value>Comparar textos</value>
  </data>
  <data name="FormMasterTitle" xml:space="preserve">
    <value>Wiremock UI</value>
  </data>
  <data name="formWebRequest" xml:space="preserve">
    <value>Web Request</value>
  </data>
  <data name="gitHubProjectUrl" xml:space="preserve">
    <value>https://github.com/juniorgasparotto/WireMockUI</value>
  </data>
  <data name="invalidJsonMessage" xml:space="preserve">
    <value>Esse JSON não é válido.</value>
  </data>
  <data name="jsonLoadError" xml:space="preserve">
    <value>Ocorreu um erro ao tentar carregar o JSON: {0}</value>
  </data>
  <data name="lblMiliseconds" xml:space="preserve">
    <value>milisegundos</value>
  </data>
  <data name="lblServerNew" xml:space="preserve">
    <value>Nome do servidor:</value>
  </data>
  <data name="lblServerPort" xml:space="preserve">
    <value>Porta do servidor:</value>
  </data>
  <data name="lblServerTargetUrl" xml:space="preserve">
    <value>Url de destino:</value>
  </data>
  <data name="lblScenarioDescription" xml:space="preserve">
    <value>Descrição:</value>
  </data>
  <data name="lblScenarioName" xml:space="preserve">
    <value>Nome:</value>
  </data>
  <data name="lblSelectFileCompare" xml:space="preserve">
    <value>Selecione na árvore ao lado  (&lt;) um arquivo para fazer a comparação. Use dois cliques para selecionar.</value>
  </data>
  <data name="lblTimeout" xml:space="preserve">
    <value>Timeout:</value>
  </data>
  <data name="lblUrlServer" xml:space="preserve">
    <value>Url do servidor:</value>
  </data>
  <data name="lblUrlTarget" xml:space="preserve">
    <value>Url destino:</value>
  </data>
  <data name="linkOpenFolder" xml:space="preserve">
    <value>Abrir local</value>
  </data>
  <data name="mappingBodyFileAlreadExistsMessage" xml:space="preserve">
    <value>Esse arquivo de resposta já existe</value>
  </data>
  <data name="mappingFileAlreadyExistsMessage" xml:space="preserve">
    <value>Esse arquivo de mapa já existe</value>
  </data>
  <data name="menuAbout" xml:space="preserve">
    <value>S&amp;obre</value>
  </data>
  <data name="menuAddServer" xml:space="preserve">
    <value>&amp;Adicionar servidor</value>
  </data>
  <data name="menuClose" xml:space="preserve">
    <value>&amp;Sair</value>
  </data>
  <data name="menuFile" xml:space="preserve">
    <value>&amp;Arquivo</value>
  </data>
  <data name="menuJsonVisualizer" xml:space="preserve">
    <value>&amp;Visualizador de JSON</value>
  </data>
  <data name="menuLanguages" xml:space="preserve">
    <value>&amp;Idiomas</value>
  </data>
  <data name="menuPlayAll" xml:space="preserve">
    <value>&amp;Iniciar todos</value>
  </data>
  <data name="menuPlayAndRecordAll" xml:space="preserve">
    <value>Iniciar e &amp;Gravar todos</value>
  </data>
  <data name="menuRefresh" xml:space="preserve">
    <value>&amp;Atualizar</value>
  </data>
  <data name="menuServices" xml:space="preserve">
    <value>&amp;Executar</value>
  </data>
  <data name="menuStopAll" xml:space="preserve">
    <value>&amp;Parar todos</value>
  </data>
  <data name="menuTextCompare" xml:space="preserve">
    <value>&amp;Comparador de texto</value>
  </data>
  <data name="menuTextEditor" xml:space="preserve">
    <value>&amp;Editor de texto</value>
  </data>
  <data name="menuTools" xml:space="preserve">
    <value>&amp;Ferramentas</value>
  </data>
  <data name="menuWebRequest" xml:space="preserve">
    <value>&amp;Web Request</value>
  </data>
  <data name="messageBoxAlertTitle" xml:space="preserve">
    <value>Alerta</value>
  </data>
  <data name="messageBoxErrorTitle" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="messageBoxQuestionTitle" xml:space="preserve">
    <value>Pergunta</value>
  </data>
  <data name="newBodyFileName" xml:space="preserve">
    <value>Map.txt</value>
  </data>
  <data name="newMappingFileName" xml:space="preserve">
    <value>Map.json</value>
  </data>
  <data name="openFileFromTreeViewMenu" xml:space="preserve">
    <value>Selecionar na árvore</value>
  </data>
  <data name="openFileMenu" xml:space="preserve">
    <value>Abrir arquivo</value>
  </data>
  <data name="openServerFolderMenu" xml:space="preserve">
    <value>Abrir pasta do servidor</value>
  </data>
  <data name="openServerUrlScenarioMenu" xml:space="preserve">
    <value>Abrir URL do servidor no browser</value>
  </data>
  <data name="openServerUrlTargetMenu" xml:space="preserve">
    <value>Abrir URL destino no browser</value>
  </data>
  <data name="openScenarioFolderMenu" xml:space="preserve">
    <value>Abrir pasta do cenário</value>
  </data>
  <data name="removeMappingConfirmMessage" xml:space="preserve">
    <value>Deseja realmente remover esse arquivo?</value>
  </data>
  <data name="removeMappingErrorMessage" xml:space="preserve">
    <value>Ocorreu um erro ao tentar excluir esse arquivo: {0}</value>
  </data>
  <data name="removeServerConfirmMessage" xml:space="preserve">
    <value>Deseja realmente excluir esse servidor?</value>
  </data>
  <data name="removeServerConfirmTitle" xml:space="preserve">
    <value>Confirmação</value>
  </data>
  <data name="removeServerError" xml:space="preserve">
    <value>Ocorreu um problema ao tentar excluir a pasta. Tente fazer esse processo manualmente.</value>
  </data>
  <data name="removeServerMenu" xml:space="preserve">
    <value>Remover</value>
  </data>
  <data name="removeScenarioMenu" xml:space="preserve">
    <value>Remover</value>
  </data>
  <data name="renameFileError" xml:space="preserve">
    <value>Erro ao renomear arquivo: {0}</value>
  </data>
  <data name="renameMappingMenu" xml:space="preserve">
    <value>Renomear</value>
  </data>
  <data name="saveFileErrorMessage" xml:space="preserve">
    <value>Ocorreu um erro ao tentar salvar o arquivo: {0}</value>
  </data>
  <data name="saveMenu" xml:space="preserve">
    <value>Salvar</value>
  </data>
  <data name="scenarioConfirmRemoveMessage" xml:space="preserve">
    <value>Deseja realmente excluir esse cenário?</value>
  </data>
  <data name="scenarioConfirmRemoveTitle" xml:space="preserve">
    <value>Confirmação</value>
  </data>
  <data name="scenarioRemoveError" xml:space="preserve">
    <value>Ocorreu um problema ao tentar excluir a pasta. Tente fazer esse processo manualmente.</value>
  </data>
  <data name="scenarioStopMessage" xml:space="preserve">
    <value>Para continuar é necessário parar a execução desse servidor.</value>
  </data>
  <data name="selectTextErrorMessage" xml:space="preserve">
    <value>Ocorreu um erro ao selecionar o arquivo: {0}</value>
  </data>
  <data name="setScenarioDefaultMenu" xml:space="preserve">
    <value>Definir como padrão</value>
  </data>
  <data name="showScenarioNameMenu" xml:space="preserve">
    <value>Visualizar Nome</value>
  </data>
  <data name="showScenarioUrlMenu" xml:space="preserve">
    <value>Visualizar URL</value>
  </data>
  <data name="startServerAndRecordMenu" xml:space="preserve">
    <value>Iniciar e Gravar</value>
  </data>
  <data name="startServerAsProxyMenu" xml:space="preserve">
    <value>Iniciar (Somente Proxy)</value>
  </data>
  <data name="startServerMenu" xml:space="preserve">
    <value>Iniciar</value>
  </data>
  <data name="startServerAsProxyText" xml:space="preserve">
    <value>(Proxy)</value>
  </data>
  <data name="startServerError" xml:space="preserve">
    <value>Ocorreu um erro ao tentar iniciar: {0}: {1}</value>
  </data>
  <data name="startServerRecordText" xml:space="preserve">
    <value>(Gravando)</value>
  </data>
  <data name="stopServerMenu" xml:space="preserve">
    <value>Parar</value>
  </data>
  <data name="stopServerConfirmMessage" xml:space="preserve">
    <value>Deseja realmente parar o servidor "{0}"?</value>
  </data>
  <data name="stsStatus" xml:space="preserve">
    <value>Status:</value>
  </data>
  <data name="stsTime" xml:space="preserve">
    <value>Tempo:</value>
  </data>
  <data name="tabLogTable" xml:space="preserve">
    <value>Tabela</value>
  </data>
  <data name="tabLogText" xml:space="preserve">
    <value>Texto</value>
  </data>
  <data name="tabServerAdvance" xml:space="preserve">
    <value>Avançado</value>
  </data>
  <data name="tabServerBasic" xml:space="preserve">
    <value>Básico</value>
  </data>
  <data name="tabRaw" xml:space="preserve">
    <value>Raw</value>
  </data>
  <data name="tabRequestBody" xml:space="preserve">
    <value>Body</value>
  </data>
  <data name="tabRequestHeaders" xml:space="preserve">
    <value>Headers</value>
  </data>
  <data name="tabRequestHeadersReal" xml:space="preserve">
    <value>Header (Final)</value>
  </data>
  <data name="tabRequestOptions" xml:space="preserve">
    <value>Opções</value>
  </data>
  <data name="tabResponseBody" xml:space="preserve">
    <value>Body</value>
  </data>
  <data name="tabResponseHeaders" xml:space="preserve">
    <value>Headers</value>
  </data>
  <data name="tabTree" xml:space="preserve">
    <value>JSON Viewer</value>
  </data>
  <data name="templateBodyFileName" xml:space="preserve">
    <value>Templates/Files/New.txt</value>
  </data>
  <data name="templateMapFileName" xml:space="preserve">
    <value>Templates/Mappings/New.json</value>
  </data>
  <data name="toggleMappingStateMenu" xml:space="preserve">
    <value>Habilitado</value>
  </data>
  <data name="treeviewTopNode" xml:space="preserve">
    <value>Servidores</value>
  </data>
  <data name="txtAboutText" xml:space="preserve">
    <value>Esse projeto foi feito por Glauber Gasparotto.</value>
  </data>
  <data name="viewAsJsonMenu" xml:space="preserve">
    <value>Visualizar como Json</value>
  </data>
  <data name="viewInComposerMenu" xml:space="preserve">
    <value>Visualizar com WebRequest</value>
  </data>
  <data name="formatJsonMenu" xml:space="preserve">
    <value>Formatar</value>
  </data>
  <data name="viewLink" xml:space="preserve">
    <value>Ver</value>
  </data>
  <data name="viewMappingBodyInExplorerResponseMenu" xml:space="preserve">
    <value>Visualizar no explorer</value>
  </data>
  <data name="viewMappingInExplorerMenu" xml:space="preserve">
    <value>Visualizar no explorer</value>
  </data>
  <data name="viewRawMenu" xml:space="preserve">
    <value>Visualizar conteúdo</value>
  </data>
  <data name="viewRequestMenu" xml:space="preserve">
    <value>Visualizar requisição (Formato do wiremock)</value>
  </data>
  <data name="viewResponseMenu" xml:space="preserve">
    <value>Visualizar resposta  (Formato do wiremock)</value>
  </data>
  <data name="viewTextMenu" xml:space="preserve">
    <value>Visualizar no editor de texto</value>
  </data>
  <data name="formatXmlMenu" xml:space="preserve">
    <value>Formatar</value>
  </data>
  <data name="toolStripStatusDiff" xml:space="preserve">
    <value>Diferença de tempo:</value>
  </data>
  <data name="toolStripStatusLabelCount" xml:space="preserve">
    <value>Total de resultados:</value>
  </data>
  <data name="toolStripStatusValue" xml:space="preserve">
    <value>(Selecione duas celulas de tempo para calcular a diferença)</value>
  </data>
  <data name="chkAutoRedirect" xml:space="preserve">
    <value>Redirecionar automáticamente</value>
  </data>
  <data name="restartServerMenu" xml:space="preserve">
    <value>Reiniciar</value>
  </data>
  <data name="serverWithoutScenarioError" xml:space="preserve">
    <value>O cenário "{0}"não contém nenhum cenário para ser iniciado</value>
  </data>
  <data name="defaultScenarioName" xml:space="preserve">
    <value>Cenário1</value>
  </data>
  <data name="menuOpenFilesFolder" xml:space="preserve">
    <value>A&amp;brir pasta dos arquivos</value>
  </data>
  <data name="startServerText" xml:space="preserve">
    <value>(Iniciado)</value>
  </data>
  <data name="viewMappingInWebRequestMenu" xml:space="preserve">
    <value>Visualizar com Web Request</value>
  </data>
  <data name="confirmRefreshAll" xml:space="preserve">
    <value>Para continuar será necessário parar todos os servidores, deseja continuar?</value>
  </data>
  <data name="editValueMenu" xml:space="preserve">
    <value>Editar valor</value>
  </data>
  <data name="jsonEscapeMenu" xml:space="preserve">
    <value>Escape</value>
  </data>
  <data name="jsonText" xml:space="preserve">
    <value>Json</value>
  </data>
  <data name="jsonUnescapeMenu" xml:space="preserve">
    <value>Unescape</value>
  </data>
  <data name="minifyMenu" xml:space="preserve">
    <value>Minify</value>
  </data>
  <data name="xmlEscapeMenu" xml:space="preserve">
    <value>Escape</value>
  </data>
  <data name="xmlText" xml:space="preserve">
    <value>Xml</value>
  </data>
  <data name="xmlUnescapeMenu" xml:space="preserve">
    <value>Unescape</value>
  </data>
  <data name="btnReplace" xml:space="preserve">
    <value>Substituir</value>
  </data>
  <data name="formEditValue" xml:space="preserve">
    <value>Editar valor</value>
  </data>
  <data name="searchMenu" xml:space="preserve">
    <value>Localizar</value>
  </data>
  <data name="btnReplaceAll" xml:space="preserve">
    <value>Substituir todos</value>
  </data>
  <data name="copyMenu" xml:space="preserve">
    <value>Copiar</value>
  </data>
  <data name="cutMenu" xml:space="preserve">
    <value>Recortar</value>
  </data>
  <data name="menuFindInFiles" xml:space="preserve">
    <value>&amp;Localizar na pasta...</value>
  </data>
  <data name="pasteMenu" xml:space="preserve">
    <value>Colar</value>
  </data>
  <data name="redoMenu" xml:space="preserve">
    <value>Refazer</value>
  </data>
  <data name="removeMenu" xml:space="preserve">
    <value>Excluir</value>
  </data>
  <data name="selectAllMenu" xml:space="preserve">
    <value>Selecionar tudo</value>
  </data>
  <data name="undoMenu" xml:space="preserve">
    <value>Desfazer</value>
  </data>
  <data name="chkDisableLogTable" xml:space="preserve">
    <value>Desativar log da tabela</value>
  </data>
  <data name="confirmReplaceMessage" xml:space="preserve">
    <value>Deseja realmente substituir "{0}" ocorrências? Esse processo é irreversível.</value>
  </data>
  <data name="lblFolder" xml:space="preserve">
    <value>Buscar na pasta:</value>
  </data>
  <data name="noFilesFoundMessage" xml:space="preserve">
    <value>Nenhum arquivo com esse texto foi localizado</value>
  </data>
  <data name="unsavedFileMessage" xml:space="preserve">
    <value>Deseja realmente fechar o arquivo "{0}" sem salvar as alterações?</value>
  </data>
  <data name="editMenu" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="languagesMenu" xml:space="preserve">
    <value>Linguagens</value>
  </data>
  <data name="wordWrapMenu" xml:space="preserve">
    <value>Quebrar linhas automaticamente</value>
  </data>
</root>