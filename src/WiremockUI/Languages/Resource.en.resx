<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="addServerDuplicateNameMessage" xml:space="preserve">
    <value>This "Name" is already in use</value>
  </data>
  <data name="addServerDuplicatePortMessage" xml:space="preserve">
    <value>This "Port" is already in use</value>
  </data>
  <data name="addServerInvalidPortMessage" xml:space="preserve">
    <value>The "Port" field is invalid.</value>
  </data>
  <data name="addServerRequiredNameMessage" xml:space="preserve">
    <value>The "Name" field is required.</value>
  </data>
  <data name="addServerRequiredPortMessage" xml:space="preserve">
    <value>The "Port" field is required.</value>
  </data>
  <data name="addServerRequiredUrlTargetMessage" xml:space="preserve">
    <value>The "Target Url" field is required.</value>
  </data>
  <data name="addServerScenario" xml:space="preserve">
    <value>Add scenario</value>
  </data>
  <data name="addScenarioDuplicateNameMessage" xml:space="preserve">
    <value>This "Name" is already in use</value>
  </data>
  <data name="addScenarioMenu" xml:space="preserve">
    <value>Add map</value>
  </data>
  <data name="addScenarioRequiredNameMessage" xml:space="preserve">
    <value>The "Name" field is required.</value>
  </data>
  <data name="btnAdd" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="btnCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="btnCancelFileSelectiong" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="btnClean" xml:space="preserve">
    <value>Clean</value>
  </data>
  <data name="btnClose" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="btnCloseTab" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="btnCompare" xml:space="preserve">
    <value>Compare</value>
  </data>
  <data name="btnEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="btnExecute" xml:space="preserve">
    <value>Execute</value>
  </data>
  <data name="btnFormat" xml:space="preserve">
    <value>Format JSON</value>
  </data>
  <data name="btnOpenExplorer" xml:space="preserve">
    <value>Open in an external viewer</value>
  </data>
  <data name="btnSaveFile" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="btnSearch" xml:space="preserve">
    <value>Find</value>
  </data>
  <data name="btnXmlFormat" xml:space="preserve">
    <value>Format XML</value>
  </data>
  <data name="chk100Expect" xml:space="preserve">
    <value>100-expect</value>
  </data>
  <data name="chkAutoContentLength" xml:space="preserve">
    <value>Calculate the "Content-Length" header automatically</value>
  </data>
  <data name="chkAutoScroll" xml:space="preserve">
    <value>Auto scroll</value>
  </data>
  <data name="chkDisableLogText" xml:space="preserve">
    <value>Disable log text</value>
  </data>
  <data name="collapseAllMenu" xml:space="preserve">
    <value>Close all</value>
  </data>
  <data name="compareMenu" xml:space="preserve">
    <value>Compare...</value>
  </data>
  <data name="compareResultTitle" xml:space="preserve">
    <value>Result: {0} secs.</value>
  </data>
  <data name="deleteMappingMenu" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="duplicateMappingMenu" xml:space="preserve">
    <value>Duplicate</value>
  </data>
  <data name="editServerMenu" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="editScenarioMenu" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="email" xml:space="preserve">
    <value>glaubergasparottojr@hotmail.com</value>
  </data>
  <data name="expandAllMenu" xml:space="preserve">
    <value>Expand all</value>
  </data>
  <data name="fileNotExistsMessage" xml:space="preserve">
    <value>File not exists</value>
  </data>
  <data name="formServerInEditModeTitle" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="formServerTitle" xml:space="preserve">
    <value>Add Server</value>
  </data>
  <data name="formAddScenarioInEditModeTitle" xml:space="preserve">
    <value>Edit scenario</value>
  </data>
  <data name="formAddScenarioTitle" xml:space="preserve">
    <value>Add scenario</value>
  </data>
  <data name="formatJsonErrorMessage" xml:space="preserve">
    <value>This JSON is not valid: {0}</value>
  </data>
  <data name="formatXmlErrorMessage" xml:space="preserve">
    <value>This XML is not valid: {0}</value>
  </data>
  <data name="formCompareTitle" xml:space="preserve">
    <value>Compare texts</value>
  </data>
  <data name="FormMasterTitle" xml:space="preserve">
    <value>Wiremock UI</value>
  </data>
  <data name="formWebRequest" xml:space="preserve">
    <value>Web Request</value>
  </data>
  <data name="gitHubProjectUrl" xml:space="preserve">
    <value>https://github.com/juniorgasparotto/WireMockUI</value>
  </data>
  <data name="invalidJsonMessage" xml:space="preserve">
    <value>This JSON is not valid.</value>
  </data>
  <data name="jsonLoadError" xml:space="preserve">
    <value>An error occurred while attempting to load JSON: {0}</value>
  </data>
  <data name="lblMiliseconds" xml:space="preserve">
    <value>milliseconds</value>
  </data>
  <data name="lblServerNew" xml:space="preserve">
    <value>Server Name:</value>
  </data>
  <data name="lblServerPort" xml:space="preserve">
    <value>Server port:</value>
  </data>
  <data name="lblServerTargetUrl" xml:space="preserve">
    <value>Target Url:</value>
  </data>
  <data name="lblScenarioDescription" xml:space="preserve">
    <value>Description:</value>
  </data>
  <data name="lblScenarioName" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="lblSelectFileCompare" xml:space="preserve">
    <value>Select in the next tree (&lt;) a file to make the comparison. Use two clicks to select.</value>
  </data>
  <data name="lblTimeout" xml:space="preserve">
    <value>Timeout:</value>
  </data>
  <data name="lblUrlServer" xml:space="preserve">
    <value>Server Url:</value>
  </data>
  <data name="lblUrlTarget" xml:space="preserve">
    <value>Target Url:</value>
  </data>
  <data name="linkOpenFolder" xml:space="preserve">
    <value>Open location</value>
  </data>
  <data name="mappingBodyFileAlreadExistsMessage" xml:space="preserve">
    <value>This response file already exists</value>
  </data>
  <data name="mappingFileAlreadyExistsMessage" xml:space="preserve">
    <value>This mapping file already exists</value>
  </data>
  <data name="menuAbout" xml:space="preserve">
    <value>Ab&amp;out</value>
  </data>
  <data name="menuAddServer" xml:space="preserve">
    <value>&amp;Add Server</value>
  </data>
  <data name="menuClose" xml:space="preserve">
    <value>&amp;Quit</value>
  </data>
  <data name="menuFile" xml:space="preserve">
    <value>&amp;File</value>
  </data>
  <data name="menuJsonVisualizer" xml:space="preserve">
    <value>&amp;JSON Viewer</value>
  </data>
  <data name="menuLanguages" xml:space="preserve">
    <value>&amp;Languages</value>
  </data>
  <data name="menuPlayAll" xml:space="preserve">
    <value>&amp;Start All</value>
  </data>
  <data name="menuPlayAndRecordAll" xml:space="preserve">
    <value>Start and &amp;Record All</value>
  </data>
  <data name="menuRefresh" xml:space="preserve">
    <value>&amp;Refresh</value>
  </data>
  <data name="menuServices" xml:space="preserve">
    <value>&amp;Execute</value>
  </data>
  <data name="menuStopAll" xml:space="preserve">
    <value>&amp;Stop all</value>
  </data>
  <data name="menuTextCompare" xml:space="preserve">
    <value>&amp;Text Compare</value>
  </data>
  <data name="menuTextEditor" xml:space="preserve">
    <value>&amp;Text Editor</value>
  </data>
  <data name="menuTools" xml:space="preserve">
    <value>&amp;Tools</value>
  </data>
  <data name="menuWebRequest" xml:space="preserve">
    <value>&amp;Web Request</value>
  </data>
  <data name="messageBoxAlertTitle" xml:space="preserve">
    <value>Alert</value>
  </data>
  <data name="messageBoxErrorTitle" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="messageBoxQuestionTitle" xml:space="preserve">
    <value>Question</value>
  </data>
  <data name="newBodyFileName" xml:space="preserve">
    <value>Map.txt</value>
  </data>
  <data name="newMappingFileName" xml:space="preserve">
    <value>Map.json</value>
  </data>
  <data name="openFileFromTreeViewMenu" xml:space="preserve">
    <value>Select in the tree</value>
  </data>
  <data name="openFileMenu" xml:space="preserve">
    <value>Open file</value>
  </data>
  <data name="openServerFolderMenu" xml:space="preserve">
    <value>Open Server folder</value>
  </data>
  <data name="openServerUrlScenarioMenu" xml:space="preserve">
    <value>Open Server URL in browser</value>
  </data>
  <data name="openServerUrlTargetMenu" xml:space="preserve">
    <value>Open Target URL in browser</value>
  </data>
  <data name="openScenarioFolderMenu" xml:space="preserve">
    <value>Open scenario folder</value>
  </data>
  <data name="removeMappingConfirmMessage" xml:space="preserve">
    <value>Do you really want to remove this file?</value>
  </data>
  <data name="removeMappingErrorMessage" xml:space="preserve">
    <value>There was an error while trying to delete this file: {0}</value>
  </data>
  <data name="removeServerConfirmMessage" xml:space="preserve">
    <value>Do you really want to delete this server?</value>
  </data>
  <data name="removeServerConfirmTitle" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="removeServerError" xml:space="preserve">
    <value>There was a problem trying to delete the folder. Try to do this process manually.</value>
  </data>
  <data name="removeServerMenu" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="removeScenarioMenu" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="renameFileError" xml:space="preserve">
    <value>Error while renaming file: {0}</value>
  </data>
  <data name="renameMappingMenu" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="saveFileErrorMessage" xml:space="preserve">
    <value>There was an error while trying to save the file: {0}</value>
  </data>
  <data name="saveMenu" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="scenarioConfirmRemoveMessage" xml:space="preserve">
    <value>Do you really want to exclude this scenario?</value>
  </data>
  <data name="scenarioConfirmRemoveTitle" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="scenarioRemoveError" xml:space="preserve">
    <value>There was a problem trying to delete the folder. Try to do this process manually.</value>
  </data>
  <data name="scenarioStopMessage" xml:space="preserve">
    <value>To continue, you must stop running this server.</value>
  </data>
  <data name="selectTextErrorMessage" xml:space="preserve">
    <value>There was an error selecting the file: {0}</value>
  </data>
  <data name="setScenarioDefaultMenu" xml:space="preserve">
    <value>Set as Default</value>
  </data>
  <data name="showScenarioNameMenu" xml:space="preserve">
    <value>Show Name</value>
  </data>
  <data name="showScenarioUrlMenu" xml:space="preserve">
    <value>Show URL</value>
  </data>
  <data name="startServerAndRecordMenu" xml:space="preserve">
    <value>Start and Record</value>
  </data>
  <data name="startServerAsProxyMenu" xml:space="preserve">
    <value>Start (Only Proxy)</value>
  </data>
  <data name="startServerMenu" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="startServerAsProxyText" xml:space="preserve">
    <value>(Proxy)</value>
  </data>
  <data name="startServerError" xml:space="preserve">
    <value>An error occurred while trying to start: {0}: {1}</value>
  </data>
  <data name="startServerRecordText" xml:space="preserve">
    <value>(Recording)</value>
  </data>
  <data name="stopServerMenu" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="stopServerConfirmMessage" xml:space="preserve">
    <value>Do you really want to stop the server?</value>
  </data>
  <data name="stsStatus" xml:space="preserve">
    <value>Status:</value>
  </data>
  <data name="stsTime" xml:space="preserve">
    <value>Time:</value>
  </data>
  <data name="tabLogTable" xml:space="preserve">
    <value>Table</value>
  </data>
  <data name="tabLogText" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="tabServerAdvance" xml:space="preserve">
    <value>Advanced</value>
  </data>
  <data name="tabServerBasic" xml:space="preserve">
    <value>Basic</value>
  </data>
  <data name="tabRaw" xml:space="preserve">
    <value>Raw</value>
  </data>
  <data name="tabRequestBody" xml:space="preserve">
    <value>Body</value>
  </data>
  <data name="tabRequestHeaders" xml:space="preserve">
    <value>Headers</value>
  </data>
  <data name="tabRequestHeadersReal" xml:space="preserve">
    <value>Header (Final)</value>
  </data>
  <data name="tabRequestOptions" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="tabResponseBody" xml:space="preserve">
    <value>Body</value>
  </data>
  <data name="tabResponseHeaders" xml:space="preserve">
    <value>Headers</value>
  </data>
  <data name="tabTree" xml:space="preserve">
    <value>JSON Viewer</value>
  </data>
  <data name="templateBodyFileName" xml:space="preserve">
    <value>Templates/Files/New.txt</value>
  </data>
  <data name="templateMapFileName" xml:space="preserve">
    <value>Templates/Mappings/New.json</value>
  </data>
  <data name="toggleMappingStateMenu" xml:space="preserve">
    <value>Enable</value>
  </data>
  <data name="treeviewTopNode" xml:space="preserve">
    <value>Servers</value>
  </data>
  <data name="txtAboutText" xml:space="preserve">
    <value>This project was developed by Glauber Gasparotto.</value>
  </data>
  <data name="viewAsJsonMenu" xml:space="preserve">
    <value>View as Json</value>
  </data>
  <data name="viewInComposerMenu" xml:space="preserve">
    <value>Open in WebRequest</value>
  </data>
  <data name="formatJsonMenu" xml:space="preserve">
    <value>Format</value>
  </data>
  <data name="viewLink" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="viewMappingBodyInExplorerResponseMenu" xml:space="preserve">
    <value>View in explorer</value>
  </data>
  <data name="viewMappingInExplorerMenu" xml:space="preserve">
    <value>View in explorer</value>
  </data>
  <data name="viewRawMenu" xml:space="preserve">
    <value>View Content</value>
  </data>
  <data name="viewRequestMenu" xml:space="preserve">
    <value>View request (Wiremock format)</value>
  </data>
  <data name="viewResponseMenu" xml:space="preserve">
    <value>View response (Wiremock format)</value>
  </data>
  <data name="viewTextMenu" xml:space="preserve">
    <value>View in text editor</value>
  </data>
  <data name="formatXmlMenu" xml:space="preserve">
    <value>Format</value>
  </data>
  <data name="toolStripStatusDiff" xml:space="preserve">
    <value>Difference of time:</value>
  </data>
  <data name="toolStripStatusLabelCount" xml:space="preserve">
    <value>Total results:</value>
  </data>
  <data name="toolStripStatusValue" xml:space="preserve">
    <value>(Select two time cells to calculate the difference)</value>
  </data>
  <data name="chkAutoRedirect" xml:space="preserve">
    <value>Auto Redirect</value>
  </data>
  <data name="restartServerMenu" xml:space="preserve">
    <value>Restart</value>
  </data>
  <data name="serverWithoutScenarioError" xml:space="preserve">
    <value>The server "{0}" does not contain scenario to start.</value>
  </data>
  <data name="defaultScenarioName" xml:space="preserve">
    <value>Scenario1</value>
  </data>
  <data name="menuOpenFilesFolder" xml:space="preserve">
    <value>&amp;Open files folder</value>
  </data>
  <data name="startServerText" xml:space="preserve">
    <value>(Started)</value>
  </data>
  <data name="viewMappingInWebRequestMenu" xml:space="preserve">
    <value>View in Web Request</value>
  </data>
  <data name="infoChangeLanguageAll" xml:space="preserve">
    <value>For the change to take effect it is necessary to close and reopen.</value>
  </data>
  <data name="editValueMenu" xml:space="preserve">
    <value>Edit value</value>
  </data>
  <data name="jsonEscapeMenu" xml:space="preserve">
    <value>Escape</value>
  </data>
  <data name="jsonText" xml:space="preserve">
    <value>Json</value>
  </data>
  <data name="jsonUnescapeMenu" xml:space="preserve">
    <value>Unescape</value>
  </data>
  <data name="minifyMenu" xml:space="preserve">
    <value>Minify</value>
  </data>
  <data name="xmlEscapeMenu" xml:space="preserve">
    <value>Escape</value>
  </data>
  <data name="xmlText" xml:space="preserve">
    <value>Xml</value>
  </data>
  <data name="xmlUnescapeMenu" xml:space="preserve">
    <value>Unescape</value>
  </data>
  <data name="btnReplace" xml:space="preserve">
    <value>Replace</value>
  </data>
  <data name="formEditValue" xml:space="preserve">
    <value>Edit value</value>
  </data>
  <data name="searchMenu" xml:space="preserve">
    <value>Find</value>
  </data>
  <data name="btnReplaceAll" xml:space="preserve">
    <value>Replace all</value>
  </data>
  <data name="copyMenu" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="cutMenu" xml:space="preserve">
    <value>Cut</value>
  </data>
  <data name="pasteMenu" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="redoMenu" xml:space="preserve">
    <value>Redo</value>
  </data>
  <data name="removeMenu" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="selectAllMenu" xml:space="preserve">
    <value>Select all</value>
  </data>
  <data name="undoMenu" xml:space="preserve">
    <value>Undo</value>
  </data>
  <data name="menuFindInFiles" xml:space="preserve">
    <value>&amp;Find in files...</value>
  </data>
  <data name="chkDisableLogTable" xml:space="preserve">
    <value>Disable log table</value>
  </data>
  <data name="confirmReplaceMessage" xml:space="preserve">
    <value>Do you really want to replace "{0}" occurrences? This process is irreversible.</value>
  </data>
  <data name="lblFolder" xml:space="preserve">
    <value>Find in folder:</value>
  </data>
  <data name="noFilesFoundMessage" xml:space="preserve">
    <value>No files with this text were found</value>
  </data>
  <data name="unsavedFileMessage" xml:space="preserve">
    <value>Do you really want to close the file "{0}" without saving the changes?</value>
  </data>
  <data name="editMenu" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="languagesMenu" xml:space="preserve">
    <value>Languages</value>
  </data>
  <data name="wordWrapMenu" xml:space="preserve">
    <value>Word Wrap</value>
  </data>
  <data name="stoppedServerText" xml:space="preserve">
    <value> (Stopped)</value>
  </data>
  <data name="certificatesBtnCancel" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="certificatesBtnLoad" xml:space="preserve">
    <value>Validate</value>
  </data>
  <data name="certificatesBtnOpen" xml:space="preserve">
    <value>Find</value>
  </data>
  <data name="certificatesBtnSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="certificatesFrmSslSettings" xml:space="preserve">
    <value>SSL TrustStore (Global)</value>
  </data>
  <data name="certificatesGroupCertificates" xml:space="preserve">
    <value>Certificates</value>
  </data>
  <data name="certificatesGroupOptions" xml:space="preserve">
    <value>Use default</value>
  </data>
  <data name="certificatesLblFile" xml:space="preserve">
    <value>File:</value>
  </data>
  <data name="certificatesLblPwd" xml:space="preserve">
    <value>Password:</value>
  </data>
  <data name="certificatesOptCacerts" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="certificatesOptOther" xml:space="preserve">
    <value>Other (JKS file)</value>
  </data>
  <data name="certificatesOptSslEmptyStore" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="groupSelectFile" xml:space="preserve">
    <value>Store file</value>
  </data>
  <data name="menuCertificates" xml:space="preserve">
    <value>SSL TrustStore (Global)</value>
  </data>
  <data name="fixSslBtnCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="fixSslBtnFix" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="fixSslGroupFixOptions" xml:space="preserve">
    <value>Choose one of the options below to try to resolve the error:</value>
  </data>
  <data name="fixSslLblError" xml:space="preserve">
    <value>There was an error while trying to load the certificates:</value>
  </data>
  <data name="fixSslOptDisableCacerts" xml:space="preserve">
    <value>Disable "SSL TrustStore Global"</value>
  </data>
  <data name="fixSslOptOpenServerSettings" xml:space="preserve">
    <value>Verify that the "HttpsTrustSore", "HttpsKeyStore" settings are populated and if these KeyStore are valid</value>
  </data>
  <data name="fixSslOptOpenSslSettings" xml:space="preserve">
    <value>Check for any invalid certificates in the "SSL TrustStore Global" settings</value>
  </data>
  <data name="menuDocumentation" xml:space="preserve">
    <value>Documentation</value>
  </data>
  <data name="menuDonate" xml:space="preserve">
    <value>Donations for this project</value>
  </data>
  <data name="menuHelp" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="menuReleases" xml:space="preserve">
    <value>Releases notes</value>
  </data>
</root>